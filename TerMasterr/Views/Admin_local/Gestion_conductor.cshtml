@model IEnumerable<Capa_entidad.Conductor>

@{ ViewBag.Title = "Gestion_conductor";
    Layout = "~/Views/Shared/_Layout - admin_local.cshtml"; }

<h2>Gestionar conductores</h2>

<link href="~/Content/css/styles.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<div class="container">
    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var conductor in Model)
            {
                <div class="col-md-5 col-lg-6 mb-3">
                    <div class="card car-conductor">
                        <div class="card-body d-flex align-items-center">
                            <div class="flex-grow-1">
                                <h5 class="card-title">@conductor.nombre</h5>
                                <p class="card-text"><strong>Número de Documento:</strong> @conductor.id_conductor</p>
                                <p class="card-text"><strong>Teléfono:</strong> @conductor.telefono</p>
                                <p class="card-text"><strong>Correo:</strong> @conductor.correo</p>
                                <p class="card-text"><strong>Estado:</strong> @conductor.Estado</p>
                                <div class="mt-3">
                                    <a class="btn btn-info" id="editar" data-bs-toggle="modal" data-bs-target="#editar_conductor" data-id="@conductor.id_conductor">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    @*<a href="@Url.Action("EliminarConductor", "Admin_local", new { id = conductor.id_conductor })" class="btn btn-danger" onclick="return Eliminar_conductor(event, '@Url.Action("EliminarConductor", "Admin_local", new { id = conductor.id_conductor })')">
                                            <i class="fa fa-trash"></i>
                                        </a>*@
                                </div>
                            </div>
                            <div class="ms-3 text-center conductor-img-container">
                                <img src="@conductor.ImagenUrl" alt="@conductor.nombre" class="img-fluid conductor-image" style="width: 150px; height: 150px; object-fit: cover;" data-bs-toggle="modal" data-bs-target="#imageModal">
                                <!-- Botón para abrir el formulario de carga de imagen -->
                                @*<a href="#" class="btn btn-cargar-foto mt-2 small-btn" data-bs-toggle="modal" data-bs-target="#modalCargarFoto" data-id="@conductor.id_conductor">
                                        <span class="material-icons">add_circle</span>
                                        <span>Cargar foto</span>
                                    </a>*@
                            </div>
                        </div>
                    </div>
                </div> }
        }
        else
        {
            <div class="col">
                <p>No hay conductores registrados.</p>
            </div>}
    </div>
</div>

<!-- Modal para editar estado de conductor -->
<div class="modal fade" id="editar_conductor" tabindex="-1" aria-labelledby="editar_conductorLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editar_conductorLabel">Editar estado de conductor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form enctype="multipart/form-data" action="@Url.Action("EditarConductor", "Admin_local")" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Number" class="form-label">Número de documento</label>
                        <input type="text" class="form-control" id="id_conductor" name="id_conductor" required disabled>
                    </div>
                    <!-- Campo oculto para enviar el ID del conductor -->
                    <input type="hidden" id="id_conductor_hidden" name="id_conductor">
                    <div class="mb-3">
                        <label for="Route" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nombre" name="nombre" required disabled>
                    </div>

                    <div class="mb-3">
                        <label for="Capacity" class="form-label">Estado</label>
                        <select class="form-control" id="Estado" name="Estado" required>
                            <option value="Activo">Activo</option>
                            <option value="No activo">No activo</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal para mostrar imagen -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Imagen del Conductor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="" alt="Imagen del Conductor" class="img-fluid" id="modalImage">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        /////////////////// Función para abrir el modal de imagen en tamaño completo /////////////////////
        document.querySelectorAll('.conductor-image').forEach(image => {
            image.addEventListener('click', function () {
                const imgSrc = this.getAttribute('src'); // Obtener la URL de la imagen
                document.getElementById('modalImage').setAttribute('src', imgSrc); // Asignar la URL al modal
            });
        });

        //////////////////////// Función para eliminar coductor //////////////////////////////////
        @*function Eliminar_conductor(event, url) {
            event.preventDefault(); // Previene el comportamiento por defecto del enlace

            Swal.fire({
                title: '¿Estás seguro?',
                text: "¡Esta acción no se puede deshacer!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: 'secundary',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Si el usuario confirma, redirige a la URL
                    Swal.fire({
                        icon: 'succes',
                        title: '@Html.Raw(TempData["SuccessMessage"])'
                    });
                    window.location.href = url;
                }
            });
        };*@

        /////////////////////////Función para editar el estado del conductor/////////////////////////////
        document.addEventListener('DOMContentLoaded', function () {
            var editar_conductor = document.getElementById('editar_conductor');
            editar_conductor.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget; // Botón que abrió el modal
                var conductorId = button.getAttribute('data-id'); // Extraer el ID del conductor

                // Hacer una solicitud AJAX para obtener los datos del conductor
                fetch(`/Admin_local/Get_ConductorById?id=${conductorId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Rellenar los campos del modal con los datos del conductor
                        document.getElementById('id_conductor').value = data.id_conductor; // Campo visible del id_conductor, no se envía al formulario
                        document.getElementById('id_conductor_hidden').value = data.id_conductor; //Campo invisible del id_conductor, este se enviará en el formulario
                        document.getElementById('nombre').value = data.nombre;
                        document.getElementById('Estado').value = data.estado; // Estado actual del conductor

                    })
                    .catch(error => console.error('Error al obtener los datos del conductor:', error));
            });
        });

    </script>
}


<style>
    /* Google Poppins Font CDN Link */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    /* Variables */
    :root {
        --primary-font-family: 'Poppins', sans-serif;
        --light-white: #f5f8fa;
        --gray: #5e6278;
        --gray-1: #e3e3e3;
        --primary-color: #FA6C17;
    }

    body {
        font-family: var(--primary-font-family);
    }

    /* Main CSS */
    .wrapper {
        padding: 20px;
        background-color: var(--light-white);
        min-height: 100vh;
    }

    .car-conductor {
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        margin: 0; /* Asegúrate de que no haya margen */
    }

    .card-body {
        /*padding: 10px;*/ /* Ajusta el padding según sea necesario */
        /*align-items: center;
        width: 100%;*/ /* Ocupar todo el ancho posible */
        /*max-width: 100px;*/ /* Puedes ajustar este valor para limitar el ancho máximo */
        padding: 15px; /* Ajusta el padding según sea necesario */
        margin: 0; /* Asegúrate de que no haya margen adicional */
    }

    .car-conductor .card-body {
        display: flex;
        flex-direction: row;
        align-items: center;
    }

    .conductor-img-container {
        width: 100px; /*Ancho fijo para el contenedor de la imagen y el botón*/
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 0; /* Asegúrate de que no haya margen adicional */
    }

        .conductor-img-container img {
            margin-bottom: 10px;
            width: 80px;
            height: 80px;
            object-fit: cover;
        }

    .btn {
        margin: 0 5px;
        padding: 5px 10px;
    }

    .btn-cargar-foto {
        background-color: seagreen;
        padding: 4px 6px; /* Ajusta el tamaño del botón */
        color: #fff;
        font-weight: bold;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-decoration: none;
        transition: all 0.3s ease-in-out;
        text-align: center;
        font-size: 14px; /* Ajusta el tamaño del texto */
        margin-top: 10px; /* Ajusta el espacio entre la imagen y el botón */
        width: 130px; /* Ajusta el ancho del botón */
        margin-left: 0; /* Asegúrate de que el botón no esté pegado al borde */
    }

        .btn-cargar-foto .material-icons {
            vertical-align: middle;
            font-size: 18px; /* Ajusta el tamaño del icono */
        }

        .btn-cargar-foto span {
            vertical-align: middle;
            margin-left: 5px; /* Ajusta el espacio entre el icono y el texto */
        }

        .btn-cargar-foto:hover {
            background-color: seagreen;
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
        }
</style>